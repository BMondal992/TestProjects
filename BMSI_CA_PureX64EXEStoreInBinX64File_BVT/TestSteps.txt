steps to create BasicMSI_Pure64bit_EXECA_StoredInBinary_BVT
----------------------------------------------------------------------------
1. Create a new Basic MSI project named BasicMSI_Pure64bit_EXECA_StoredInBinary_BVT
2. Go to the Releases view Add four product configurations named x86_loose, x86_strict, x64_loose, and x64_strict. 
3. Select x64_loose Change the Template Summary setting to x64
4. Select x64_strict Change the Template Summary setting to x64
5. Copy TestAtlExe64.exe to Testdata location form \\schdevengfs\Testengineering\Testing\Sample Source Files\com 64bit
6. Copy notepad.exe to Testdata location from \\schdevengfs\Testengineering\Testing\Sample Source Files\EXE files
7. Add TestAtlExe64.exe to INSTALLDIR
8. Go to custom action and sequences view and add a custom action: New Exe -> Stored In Binary Table 
9. Rename to ExeStoredInBinary
11. Save and close ide




SetPaltformValidation.vbs:
--------------------------------

	Set Wshell = CreateObject("WScript.Shell")
	Set FSO = CreateObject("Scripting.FileSystemObject")
	Set AutoHelper = CreateObject("AutomationHelper.AutomationLayerHelper")
	Set args = WScript.Arguments
	sPath = args.Item(0)
	ISVersion = args.Item(1)

	ISWI = "ISWiAuto"+ISVersion+".ISWiProject"
	Set pProject = CreateObject(ISWI) 
		
    pProject.OpenProject sPath, True 
	

	Set pProdConfig1 = pProject.ISWiProductConfigs("x64_strict")
	Set pProdConfig2 = pProject.ISWiProductConfigs("x86_strict")

	'Setting Platform Validation to Strict. Use 1 for Strict, 0 for Linient
	pProdConfig1.PlatformValidation = 1
	pProdConfig2.PlatformValidation = 1
	
	pProject.SaveProject
	pProject.CloseProject
	
	'Define Product Configuration name in Array
	strPConfig = Array("x64_strict", "x86_strict")
	
	RetVal = 1

	For j = 0 To UBound(strPConfig) 
		'Query to check value in Table ISProductConfigurationProperty
		pSQL = "SELECT `Value` FROM `ISProductConfigurationProperty` WHERE `ISProductConfiguration_` = '"&strPConfig(j)&"' AND `Property` = 'PlatformValidation'"	
		Fail = 0
		'Execute Query
		Call AutoHelper.SQLQuery(pSQL, sPath, ismProperty)
		'Compare Result
		Call AutoHelper.compare("1", ismProperty, i, Fail)
		
		RetVal = Fail
		If RetVal = 1 Then
			'Stop the execution if RetVal = 1
			WScript.echo "-1"
			WScript.Quit
		End If
			
	Next

'Sending message to QTP
If RetVal = 0 Then
	WScript.echo "0"
Else
	WScript.echo "-1"
End If
		

Set Wshell = Nothing
Set FSO = Nothing
Set AutoHelper = Nothing
Set args = Nothing

